name: 'Shift-Left Testing'

on: 
  push:
    branches: 
      - main

jobs:
  install_dependencies:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install

  lint:
    needs: install_dependencies
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: Linting
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('**/package-lock.json') }} 
      - name: 'Docker compose up'
        run: docker-compose up -d
      - name: Run tests
        run: npm test
  
  test_coverage:
    needs: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: 'Docker compose up'
        run: docker-compose up -d
      - name: Run Test Coverage
        run: npm run coverage
      - name: Run Mutation Testing
        run: npx stryker run

  notify:
    needs:
      - test
      - test_coverage
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Variables
        id: vars
        run: echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
      - name: 'Notify'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON_EMOJI: ":panda_face:"
          SLACK_TITLE: |
            :wrench: Deploying `${{ steps.vars.outputs.SHORT_COMMIT_ID }}` by @${{ github.actor }}
          SLACK_MESSAGE: |
            
            :wave: Hi ${{ github.actor }}, please monitor your deployment for at least *10 minutes*.


            :exclamation: *TAKE NOTE* If there are problems use the Deployment Procedure

            
            :mag: Things you need to check:


            1. If you deployed a new feature, test it that it work as expected.
            2. Watch for alerts in this channel, `#service-errors`.
            3. Check our E-Prescription War Room for issues like *elevated errors*, *fewer checkouts*, or *slow performance*.
          SLACK_USERNAME: Notifier
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    needs:
      - notify
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Variables
        id: vars
        run: echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
      - name: 'DEPLOY'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON_EMOJI: ":female-technologist:"
          SLACK_TITLE: |
            :tada: SUCCESSFUL DEPLOYMENT!
          SLACK_MESSAGE: |
            
            E-prescription is now running ${{ steps.vars.outputs.SHORT_COMMIT_ID }}.


            @${{ github.actor }}, remember to test your feature and monitor for issues.

          SLACK_USERNAME: Deployer
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}